apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: deploy-with-env-variables
  labels:
    app.edp.epam.com/pipelinetype: deploy
spec:
  description: |
    This Pipeline is used to deploy applications to the target Stage (Environment).
  params:
    - name: pipelineUrl
      description: |
        URL of the pipeline run in Tekton Dashboard.
      type: string
      default: https://portal-{{ .Release.Namespace }}.{{ .Values.global.dnsWildCard }}/c/main/pipelines/$(context.pipelineRun.namespace)/$(context.pipelineRun.name)
    - name: CDPIPELINE
      description: |
        EDP kind:CDPipeline name used for deployment. For example: mypipe, myfeature
      type: string
    - name: CDSTAGE
      description: |
        EDP kind:Stage name of the kind:CDPipeline defined in the CDPIPELINE values. For example: dev, test, prod
      type: string
    - name: APPLICATIONS_PAYLOAD
      description: |
        Applications payload in format: {"codebase1": {"imageTag": "version1", "customValues": true}, "codebase2": {"imageTag": "version2", "customValues": true}}. For example: {"demo": {"imageTag": "main-20240103-141431", "customValues": true}, "myapp": {"imageTag": "0.1.0-SNAPSHOT.1", "customValues": true}}
      type: string
    - name: KUBECONFIG_SECRET_NAME
      description: The name of secret with Kubeconfig to connect to the remote cluster
      type: string
  tasks:
    - name: pre-deploy
      taskRef:
        kind: Task
        name: run-quality-gate
      params:
        - name: PIPELINE
          value: $(params.CDPIPELINE)
        - name: STAGE
          value: $(params.CDSTAGE)
        - name: APPLICATIONS_PAYLOAD
          value: $(params.APPLICATIONS_PAYLOAD)
        - name: KUBECONFIG_SECRET_NAME
          value: $(params.KUBECONFIG_SECRET_NAME)
        - name: BASE_IMAGE
          value: "bitnami/kubectl:1.25.4"
        - name: EXTRA_COMMANDS
          value:
            echo "Hello World"

    - name: deploy-app
      taskRef:
        kind: Task
        name: deploy-applicationset-cli
      runAfter:
        - pre-deploy
      params:
        - name: PIPELINE
          value: $(params.CDPIPELINE)
        - name: STAGE
          value: $(params.CDSTAGE)
        - name: APPLICATIONS_PAYLOAD
          value: $(params.APPLICATIONS_PAYLOAD)

    - name: post-deploy
      taskRef:
        kind: Task
        name: post-run-quality-gate
      runAfter:
        - deploy-app
      params:
        - name: PIPELINE
          value: $(params.CDPIPELINE)
        - name: STAGE
          value: $(params.CDSTAGE)
        - name: APPLICATIONS_PAYLOAD
          value: $(params.APPLICATIONS_PAYLOAD)
        - name: KUBECONFIG_SECRET_NAME
          value: $(params.KUBECONFIG_SECRET_NAME)
        - name: BASE_IMAGE
          # value: "curlimages/curl:8.10.1"
          value: "bitnami/kubectl:1.25.4"
        - name: EXTRA_COMMANDS
          # curl $CURL_METHOD -s $ENDPOINT:$PORT$PREFIX
          value: |
            kubectl run $POD_NAME --image=$IMAGE_NAME -n default --rm -i --tty --restart=Never -- sh -c "
              response=\$($COMMAND $CURL_METHOD -s $ENDPOINT:$PORT$PREFIX); \
              if [ \"\$response\" = \"$RESPONCE\" ]; then \
                echo 'Expected response received: $RESPONCE'; \
              else \
                echo 'Unexpected response: ' \$response; \
                exit 1; \
              fi"
          # kubectl run curl-pod --image=curlimages/curl:8.10.1 -n default --rm -i --tty --restart=Never -- sh -c "curl -X GET -s http://frontend-java-app.edp-delivery-ot-dev-dev-dev:8080/api/hello"
          # "kubectl run $POD_NAME --image=$IMAGE_NAME -n default --rm -i --tty -- sh -c $COMMAND $CURL_METHOD -s $ENDPOINT:$PORT$PREFIX"

# POD_NAME: curl-pod
# IMAGE_NAME: curlimages/curl:8.10.1
# COMMAND: curl
# CURL_METHOD: '-X GET'
# ENDPOINT: http://python38g.edp-delivery-ot-dev-dev-dev
# PORT: '8080'
# PREFIX: /api/hello

# kubectl run $POD_NAME --image=$IMAGE_NAME -i --tty --rm --command $COMMAND $METHOD:-s $ENDPOINT:$PORT$PREFIX

    - name: promote-images
      taskRef:
        kind: Task
        name: promote-images
      runAfter:
        - post-deploy
      params:
        - name: APPLICATIONS_PAYLOAD
          value: $(params.APPLICATIONS_PAYLOAD)
        - name: CDPIPELINE_STAGE
          value: $(params.CDSTAGE)
        - name: CDPIPELINE_CR
          value: $(params.CDPIPELINE)
